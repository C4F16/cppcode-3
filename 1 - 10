# 1 
#include <iostream>
#include<iomanip>
using namespace std;
int RandNumber(int From, int To) {
    int RandNum = rand() % (To - From + 1) + From;
    return RandNum;
}
void FillMatrixWithRandNumber(int Array[3][3], int rows , int colom) {
    for (int i = 0; i <= rows; i++) {
        for (int j = 0; j <= colom; j++)
        {
        
            Array[i][j] = RandNumber(1, 100);
        }
    }
}
void PrintMatrix(int array[3][3], int colom , int rows ) {
    for (int i = 0; i < rows; i++)
    {
        for(int j = 0 ; j < colom;j++)
        {
            cout << setw(3) << array[i][j];
        }
        cout << endl;

    }
}
int main()
{
    srand((unsigned)time(NULL));

    int array[3][3];

    FillMatrixWithRandNumber(array, 3, 3);
    cout << endl;
    PrintMatrix(array, 3, 3);

}
-----------------------------------------------------
# 2 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandNumber(int From, int To) {
    return rand() % (To - From + 1) + From;
}

void FillMatrixWithRandNumber(int Array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            Array[i][j] = RandNumber(1, 100);
        }
    }
}

int RowSum(int array[3][3], int row, int colom) {
    int sum = 0;
    for (int i = 0; i < colom; i++) {
        sum += array[row][i];
    }
    return sum;
}

void PrintMatrix(int array[3][3], int rows, int colom) {
    cout << "Matrix : "<<endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            cout << setw(4) << array[i][j];
        }
        cout << endl;
    }
}

void PrintRowSums(int array[3][3], int rows, int colom) {
    cout << endl << "Row Sums : " << endl;
    for (int i = 0; i < rows; i++) {
        cout << "Row " << i + 1 << " sum = " << RowSum(array, i, colom) << endl;
    }
}

int main() {
    srand((unsigned)time(NULL));

    int array[3][3];

    FillMatrixWithRandNumber(array, 3, 3);
    PrintMatrix(array, 3, 3);
    PrintRowSums(array, 3, 3);

   
    return 0;
}
----------------------------------------------------
# 3 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandNumber(int From, int To) {
    return rand() % (To - From + 1) + From;
}

void FillMatrixWithRandNumber(int Array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            Array[i][j] = RandNumber(1, 100);
        }
    }
}

int RowSum(int array[3][3], int row, int colom) {
    int sum = 0;
    for (int i = 0; i < colom; i++) {
        sum += array[row][i];
    }
    return sum;
}

void PrintMatrix(int array[3][3], int row, int colom) {
    cout << "matrix : "<<endl;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < colom; j++) {
            cout << setw(4) << array[i][j];
        }
        cout << endl;
    }
}

void SumMatixRowInArry(int array[3][3], int arry[3], int row, int colom)
{
    for (int i = 0; i < row; i++)
    {
        arry[i] = RowSum(array, i, colom);
    }
}
void PrintRowSumInArray(int arry[3] , int row) {
    cout << endl << "sum each row in array  : " << endl;
    for (int i = 0; i < row; i++) {
        cout << "Row " << i + 1 << " sum = " <<arry[i] << endl;
    }
}
void PrintRowSums(int array[3][3], int row, int colom) {
    cout << endl << "row Sum : " << endl;
    for (int i = 0; i < row; i++) {
        cout << "row " << i + 1 << " sum = " << RowSum(array, i, colom) << endl;
    }
}

int main() {
    srand((unsigned)time(NULL));

    int array[3][3];
    int arry[3];
    FillMatrixWithRandNumber(array, 3, 3);
    PrintMatrix(array, 3, 3);
    SumMatixRowInArry(array,arry, 3, 3);
    PrintRowSumInArray(arry, 3);
   
    return 0;
}
*****************************************************
# 4 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandNumber(int From, int To) {
    return rand() % (To - From + 1) + From;
}

void FillMatrixWithRandNumber(int Array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            Array[i][j] = RandNumber(1, 100);
        }
    }
}

int ColomSum(int array[3][3], int row, int colom) {
    int sum = 0;
    for (int i = 0; i < row; i++) {
        sum += array[i][colom];
    }
    return sum;
}

void PrintMatrix(int array[3][3], int rows, int colom) {
    cout << "Matrix : " << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            cout << setw(4) << array[i][j];
        }
        cout << endl;
    }
}

void PrintColomSums(int array[3][3], int row, int colom) {
    cout << endl << "Colom Sums : " << endl;
    for (int i = 0; i < colom; i++) {
        cout << "Colm " << i + 1 << " sum = " << ColomSum(array,row,i) << endl;
    }
}

int main() {
    srand((unsigned)time(NULL));

    int array[3][3];

    FillMatrixWithRandNumber(array, 3, 3);
    PrintMatrix(array, 3, 3);
    PrintColomSums(array, 3, 3);


    return 0;
}
**********************************************************
# 5 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandNumber(int From, int To) {
    return rand() % (To - From + 1) + From;
}

void FillMatrixWithRandNumber(int Array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            Array[i][j] = RandNumber(1, 100);
        }
    }
}

int ColomSum(int array[3][3], int rows, int colom) {
    int sum = 0;
    for (int i = 0; i < rows; i++) {
        sum += array[i][colom];
    }
    return sum;
}

void PrintMatrix(int array[3][3], int rows, int colom) {
    cout << "matrix : " << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            cout << setw(4) << array[i][j];
        }
        cout << endl;
    }
}

void SumMatrixColomInArray(int array[3][3], int arry[3], int rows, int colom)
{
    for (int i = 0; i < colom; i++) {
        arry[i] = ColomSum(array, rows, i);
    }
}

void PrintColomSumInArray(int arry[3], int colom) {
    cout << endl << "sum of each column in array  : " << endl;
    for (int i = 0; i < colom; i++) {
        cout << "column " << i + 1 << " sum = " << arry[i] << endl;
    }
}

int main() {
    srand((unsigned)time(NULL));

    int array[3][3];
    int arry[3];

    FillMatrixWithRandNumber(array, 3, 3);
    PrintMatrix(array, 3, 3);
    SumMatrixColomInArray(array, arry, 3, 3);
    PrintColomSumInArray(arry, 3);

    return 0;
}
-----------------------------------------------------------
# 6 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

void FillMatrixWithOrderedNumbers(int array[3][3], int row, int Colom)
{
    int Counter = 0;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < Colom; j++)
        {
            Counter++;
            array[i][j] = Counter;
        }
    }
}
void PrintMatrix(int array[3][3], int row, int Colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < Colom; j++)
        {
            cout << array[i][j] << "  ";
        }
        cout <<endl;
    }
}

int main() {
    srand((unsigned)time(NULL));

    int array[3][3];
    FillMatrixWithOrderedNumbers(array, 3, 3);
    PrintMatrix(array, 3, 3);
   

    return 0;
}
------------------------------------------
#7
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

void FillMatrixWithOrderedNumbers(int array[3][3], int row, int Colom)
{
    int Counter = 0;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < Colom; j++)
        {
            Counter++;
            array[i][j] = Counter;
        }
    }
}
void PrintMatrix(int array[3][3], int row, int Colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < Colom; j++)
        {
            cout << array[i][j] << "  ";
        }
        cout <<endl;
    }
}
void TransposeMatrix(int array[3][3], int ArrayTransposed[3][3], int row, int Colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < Colom; j++)
        {
            ArrayTransposed[i][j] = array[j][i];
        }
    }
}
int main() {

    srand((unsigned)time(NULL));

    int array[3][3] , TransposeArray[3][3];

    FillMatrixWithOrderedNumbers(array, 3, 3);
    PrintMatrix(array, 3, 3);
    TransposeMatrix(array, TransposeArray, 3, 3);
    cout << "\nafter Transpose \n";
    PrintMatrix(TransposeArray, 3, 3);

    return 0;
}
-----------------------------------------
# 8 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandNumber(int From, int To) {
    return rand() % (To - From + 1) + From;
}

void FillMatrixWithRandNumber(int Array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            Array[i][j] = RandNumber(1, 100);
        }
    }
}

void PrintMatrix(int array[3][3], int rows, int colom) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < colom; j++) {
            cout << setw(5) << array[i][j];
        }
        cout << endl;
    }
}
void MultiplyMatrix(int Matrix1[3][3], int Matrix2[3][3], int Matrixreslt[3][3], int row, int colom) {
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            Matrixreslt[i][j] = Matrix1[i][j] * Matrix2[i][j];

        }

    }

}

int main() {
    srand((unsigned)time(NULL));

    int Matrix1[3][3], Matrix2[3][3], Matrixreslt[3][3];


    FillMatrixWithRandNumber(Matrix1, 3, 3);
    cout << "\nMatrix 1 : \n";
    PrintMatrix(Matrix1, 3, 3);

    FillMatrixWithRandNumber(Matrix2, 3, 3);
    cout << "\nMatrix 2 : " << endl;
    PrintMatrix(Matrix2, 3, 3);

    MultiplyMatrix(Matrix1, Matrix2, Matrixreslt, 3, 3);

    cout << "\nresult : " << endl;
    PrintMatrix(Matrixreslt, 3, 3);
  
    return 0;
}
*----------------------------------------------
# 9 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandomNumber(int From, int To)
{
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}

void FillMatrixWithRandomNumbers(int array[3][3], int row, int colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            array[i][j] = RandomNumber(1, 10);
        }
    }
}

void PrintMatrix(int array[3][3], int row, int colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            printf(" %0*d ", 2, array[i][j]);
        }
        cout << "\n";
    }
}

void PrintMiddleRowOfMatrix(int array[3][3], int row, int colom)
{
    int MiddleRow = row / 2;
    for (int j = 0; j < colom; j++)
    {
        printf(" %0*d ", 2, array[MiddleRow][j]);
    }
    cout << endl;
}

void PrintMiddleColOfMatrix(int array[3][3], int row, int colom)
{
    int MidColom = colom / 2;
    for (int j = 0; j < row; j++)
    {
        printf(" %0*d ", 2, array[j][MidColom]);
    }
    cout <<endl;
}

int main()
{
    srand((unsigned)time(NULL));

    int Matrix1[3][3];

    FillMatrixWithRandomNumbers(Matrix1, 3, 3);
    cout << "\nMatrix 1: \n";

    PrintMatrix(Matrix1, 3, 3);
    cout << "\nMiddle row of Matrix 1 is: \n";

    PrintMiddleRowOfMatrix(Matrix1, 3, 3);
    cout << "\nMiddle colom of Matrix 1 is: \n";
    PrintMiddleColOfMatrix(Matrix1, 3, 3);

    return 0;
}

-------------------------------------------
# 10 
#include <iostream>
#include <iomanip>
#include <ctime>

using namespace std;

int RandomNumber(int From, int To)
{
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}

void FillMatrixWithRandomNumbers(int array[3][3], int row, int colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            array[i][j] = RandomNumber(1, 10);
        }
    }
}

void PrintMatrix(int array[3][3], int row, int colom)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            printf(" %0*d ", 2, array[i][j]);
        }
        cout << "\n";
    }
}



int SumOfMatrix(int Matrix1[3][3], int row, int colom)
{
    int Sum = 0;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < colom; j++)
        {
            Sum += Matrix1[i][j];
        }
    }
    return Sum;
}
int main()
{
    srand((unsigned)time(NULL));

    int Matrix1[3][3];

    FillMatrixWithRandomNumbers(Matrix1, 3, 3);

    PrintMatrix(Matrix1, 3, 3);
    cout << "sum of Matrix : " << SumOfMatrix(Matrix1, 3, 3)<<endl;

    return 0;
}


